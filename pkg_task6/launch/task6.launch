<launch>
  
  <!-- Add Models PATH for Gazebo -->
  <env name="GAZEBO_MODEL_PATH" value="$(find pkg_vb_sim)/models"/>

  <!-- Arguments -->
  <arg name="paused" default="false"/>
  <arg name="use_sim_time" default="true"/>
  <arg name="gui" default="true"/>
  <arg name="rviz" default = "true"/>
  <arg name="headless" default="false"/>
  <arg name="debug" default="false"/>
  <arg name="extra_gazebo_args" default="--verbose"/>
  <rosparam file ="$(find pkg_ros_iot_bridge)/config/config_pyiot.yaml"/>
  <node pkg="pkg_ros_iot_bridge" type="node_action_server_ros_iot_bridge.py" name="node_action_server_ros_iot_bridge" output="screen"/>
  <!-- <node pkg="pkg_task6" type="ur5_2_controller.py" name="ur5_2_controller" output="screen"/> -->
  <!-- <node pkg="pkg_vb_sim" type="node_online_order_placer.py" name="node_online_order_placer" output="screen"/> -->
    
    	<!-- Recording Bag File for Submission -->
    <arg name="record" default="true"/>
    <arg name="rec_name" default="t5.bag"/>

    <group if="$(arg record)">
        <node name="rosbag_record_pick" pkg="rosbag" type="record"
       args="record -O $(find pkg_task6)/bag_files/$(arg rec_name) --chunksize=10 /eyrc/vb/ur5_1/vacuum_gripper/logical_camera/ur5_1 /eyrc/vb/ur5_2/vacuum_gripper/logical_camera/ur5_2" output="screen"/>
 </group>
 
  <!-- Gazebo with World File -->
  <include file="$(find pkg_vb_sim)/launch/task6_simulation.launch" />
    
    <!-- Spawn two UR5 in Gazebo -->

    <!-- <include file = "$(find pkg_vb_sim)/launch/two_ur5_gazebo.launch" /> -->

    <!-- Launch two move_group nodes for the two UR5 Arms -->
  <!-- <include file="$(find pkg_vb_sim)/launch/two_ur5_move_group.launch" /> -->

   <group ns="ur5_1">
    <rosparam command="load" file="$(find pkg_moveit_ur5_1_config)/config/joint_names.yaml" />
    <arg name="use_rviz" default="true" />
    <arg name="scene_file" default="$(find pkg_task6)/config/rviz/t5.scene"/> 
    
    <node name = "moveit_publish_scene_from_text" pkg= "moveit_ros_planning" type = "moveit_publish_scene_from_text" args= "$(arg scene_file)"/>

    <include file="$(find pkg_moveit_ur5_1_config)/launch/planning_context.launch">
      <arg name="load_robot_description" value="true"/>
    </include>

    <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher">
      <param name="/use_gui" value="false"/>
      <rosparam param="/source_list">[/joint_states]</rosparam>
    </node>

    <include file="$(find pkg_moveit_ur5_1_config)/launch/move_group.launch">
      <arg name="publish_monitored_planning_scene" value="true"/>
    </include>
    <include file="$(find pkg_moveit_ur5_1_config)/launch/moveit_rviz_robot1.launch">
      <arg name="config" value="true"/>
    </include>
  </group> 


  <group ns="ur5_2">
     <rosparam command="load" file="$(find pkg_moveit_ur5_2_config)/config/joint_names.yaml" /> 
    <arg name="use_rviz" default="true" />
    <arg name="scene_file" default="$(find pkg_task6)/config/rviz/task5_bin.scene"/> 
    
    <node name = "moveit_publish_scene_from_text" pkg= "moveit_ros_planning" type = "moveit_publish_scene_from_text" args= "$(arg scene_file)"/>


    <include file="$(find pkg_moveit_ur5_2_config)/launch/planning_context.launch">
      <arg name="load_robot_description" value="true"/>
    </include>

    <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher">
      <param name="/use_gui" value="false"/>
      <rosparam param="/source_list">[/joint_states]</rosparam>
    </node>

    <include file="$(find pkg_moveit_ur5_2_config)/launch/move_group.launch">
      <arg name="publish_monitored_planning_scene" value="true"/>
    </include>
    
    <include file="$(find pkg_moveit_ur5_2_config)/launch/moveit_rviz_robot2.launch">
      <arg name="config" value="true"/>
    </include>
  </group>
  
</launch>
